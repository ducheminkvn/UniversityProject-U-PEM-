Grammar

    0 $accept: Prog $end

    1 @1: %empty

    2 Prog: @1 DeclConst DeclVarPuisFonct DeclMain

    3 DeclConst: DeclConst CONST ListConst PV
    4          | %empty

    5 ListConst: ListConst VRG IDENT EGAL Litteral
    6          | IDENT EGAL Litteral

    7 Litteral: NombreSigne
    8         | CARACTERE

    9 NombreSigne: NUM
   10            | ADDSUB NUM

   11 DeclVarPuisFonct: TYPE ListVar PV DeclVarPuisFonct
   12                 | DeclFonct
   13                 | %empty

   14 ListVar: ListVar VRG Ident
   15        | Ident

   16 Ident: IDENT Tab

   17 Tab: Tab LSQB ENTIER RSQB
   18    | %empty

   19 DeclMain: EnTeteMain Corps

   20 EnTeteMain: MAIN LPAR RPAR

   21 DeclFonct: DeclFonct DeclUneFonct
   22          | DeclUneFonct

   23 DeclUneFonct: EnTeteFonct Corps

   24 EnTeteFonct: TYPE IDENT LPAR Parametres RPAR
   25            | VOID IDENT LPAR Parametres RPAR

   26 Parametres: VOID
   27           | ListTypVar

   28 ListTypVar: ListTypVar VRG TYPE IDENT
   29           | TYPE IDENT

   30 Corps: LACC DeclConst DeclVar SuiteInstr RACC

   31 DeclVar: DeclVar TYPE ListVar PV
   32        | %empty

   33 SuiteInstr: SuiteInstr Instr
   34           | %empty

   35 InstrComp: LACC SuiteInstr RACC

   36 Instr: LValue EGAL Exp PV
   37      | IF LPAR Exp RPAR JumpIf Instr

   38 $@2: %empty

   39 Instr: IF LPAR Exp RPAR JumpIf Instr ELSE JumpElse $@2 Instr

   40 @3: %empty

   41 Instr: WHILE @3 LPAR Exp RPAR JumpIf Instr
   42      | RETURN Exp PV
   43      | RETURN PV
   44      | IDENT LPAR Arguments RPAR PV
   45      | READ LPAR IDENT RPAR PV
   46      | READCH LPAR IDENT RPAR PV
   47      | PRINT LPAR Exp RPAR PV
   48      | PV
   49      | InstrComp

   50 Arguments: ListExp
   51          | %empty

   52 LValue: IDENT TabExp

   53 TabExp: TabExp LSQB Exp RSQB
   54       | %empty

   55 ListExp: ListExp VRG Exp
   56        | Exp

   57 Exp: Exp ADDSUB Exp
   58    | Exp DIVSTAR Exp
   59    | Exp COMP Exp
   60    | ADDSUB Exp
   61    | Exp BOPE Exp
   62    | NEGATION Exp
   63    | LPAR Exp RPAR
   64    | LValue
   65    | NUM
   66    | CARACTERE
   67    | IDENT LPAR Arguments RPAR

   68 JumpIf: %empty

   69 JumpElse: %empty

   70 ENTIER: NUM
   71       | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 37 39
ELSE (259) 39
PRINT (260) 47
READ (261) 45
READCH (262) 46
WHILE (263) 41
IDENT (264) 5 6 16 24 25 28 29 44 45 46 52 67
CONST (265) 3
TYPE (266) 11 24 28 29 31
MAIN (267) 20
VOID (268) 25 26
LPAR (269) 20 24 25 37 39 41 44 45 46 47 63 67
RPAR (270) 20 24 25 37 39 41 44 45 46 47 63 67
LACC (271) 30 35
RACC (272) 30 35
LSQB (273) 17 53
RSQB (274) 17 53
NUM (275) 9 10 65 70
CARACTERE (276) 8 66
COMP (277) 59
BOPE (278) 61
PV (279) 3 11 31 36 42 43 44 45 46 47 48
VRG (280) 5 14 28 55
EGAL (281) 5 6 36
ADDSUB (282) 10 57 60
DIVSTAR (283) 58
NEGATION (284) 62
RETURN (285) 42 43
epsilon (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Prog (33)
    on left: 2, on right: 0
@1 (34)
    on left: 1, on right: 2
DeclConst (35)
    on left: 3 4, on right: 2 3 30
ListConst (36)
    on left: 5 6, on right: 3 5
Litteral (37)
    on left: 7 8, on right: 5 6
NombreSigne (38)
    on left: 9 10, on right: 7
DeclVarPuisFonct (39)
    on left: 11 12 13, on right: 2 11
ListVar (40)
    on left: 14 15, on right: 11 14 31
Ident (41)
    on left: 16, on right: 14 15
Tab (42)
    on left: 17 18, on right: 16 17
DeclMain (43)
    on left: 19, on right: 2
EnTeteMain (44)
    on left: 20, on right: 19
DeclFonct (45)
    on left: 21 22, on right: 12 21
DeclUneFonct (46)
    on left: 23, on right: 21 22
EnTeteFonct (47)
    on left: 24 25, on right: 23
Parametres (48)
    on left: 26 27, on right: 24 25
ListTypVar (49)
    on left: 28 29, on right: 27 28
Corps (50)
    on left: 30, on right: 19 23
DeclVar (51)
    on left: 31 32, on right: 30 31
SuiteInstr (52)
    on left: 33 34, on right: 30 33 35
InstrComp (53)
    on left: 35, on right: 49
Instr (54)
    on left: 36 37 39 41 42 43 44 45 46 47 48 49, on right: 33 37 39
    41
$@2 (55)
    on left: 38, on right: 39
@3 (56)
    on left: 40, on right: 41
Arguments (57)
    on left: 50 51, on right: 44 67
LValue (58)
    on left: 52, on right: 36 64
TabExp (59)
    on left: 53 54, on right: 52 53
ListExp (60)
    on left: 55 56, on right: 50 55
Exp (61)
    on left: 57 58 59 60 61 62 63 64 65 66 67, on right: 36 37 39 41
    42 47 53 55 56 57 58 59 60 61 62 63
JumpIf (62)
    on left: 68, on right: 37 39 41
JumpElse (63)
    on left: 69, on right: 39
ENTIER (64)
    on left: 70 71, on right: 17


State 0

    0 $accept: . Prog $end

    $default  reduce using rule 1 (@1)

    Prog  go to state 1
    @1    go to state 2


State 1

    0 $accept: Prog . $end

    $end  shift, and go to state 3


State 2

    2 Prog: @1 . DeclConst DeclVarPuisFonct DeclMain

    $default  reduce using rule 4 (DeclConst)

    DeclConst  go to state 4


State 3

    0 $accept: Prog $end .

    $default  accept


State 4

    2 Prog: @1 DeclConst . DeclVarPuisFonct DeclMain
    3 DeclConst: DeclConst . CONST ListConst PV

    CONST  shift, and go to state 5
    TYPE   shift, and go to state 6
    VOID   shift, and go to state 7

    $default  reduce using rule 13 (DeclVarPuisFonct)

    DeclVarPuisFonct  go to state 8
    DeclFonct         go to state 9
    DeclUneFonct      go to state 10
    EnTeteFonct       go to state 11


State 5

    3 DeclConst: DeclConst CONST . ListConst PV

    IDENT  shift, and go to state 12

    ListConst  go to state 13


State 6

   11 DeclVarPuisFonct: TYPE . ListVar PV DeclVarPuisFonct
   24 EnTeteFonct: TYPE . IDENT LPAR Parametres RPAR

    IDENT  shift, and go to state 14

    ListVar  go to state 15
    Ident    go to state 16


State 7

   25 EnTeteFonct: VOID . IDENT LPAR Parametres RPAR

    IDENT  shift, and go to state 17


State 8

    2 Prog: @1 DeclConst DeclVarPuisFonct . DeclMain

    MAIN  shift, and go to state 18

    DeclMain    go to state 19
    EnTeteMain  go to state 20


State 9

   12 DeclVarPuisFonct: DeclFonct .
   21 DeclFonct: DeclFonct . DeclUneFonct

    TYPE  shift, and go to state 21
    VOID  shift, and go to state 7

    $default  reduce using rule 12 (DeclVarPuisFonct)

    DeclUneFonct  go to state 22
    EnTeteFonct   go to state 11


State 10

   22 DeclFonct: DeclUneFonct .

    $default  reduce using rule 22 (DeclFonct)


State 11

   23 DeclUneFonct: EnTeteFonct . Corps

    LACC  shift, and go to state 23

    Corps  go to state 24


State 12

    6 ListConst: IDENT . EGAL Litteral

    EGAL  shift, and go to state 25


State 13

    3 DeclConst: DeclConst CONST ListConst . PV
    5 ListConst: ListConst . VRG IDENT EGAL Litteral

    PV   shift, and go to state 26
    VRG  shift, and go to state 27


State 14

   16 Ident: IDENT . Tab
   24 EnTeteFonct: TYPE IDENT . LPAR Parametres RPAR

    LPAR  shift, and go to state 28

    $default  reduce using rule 18 (Tab)

    Tab  go to state 29


State 15

   11 DeclVarPuisFonct: TYPE ListVar . PV DeclVarPuisFonct
   14 ListVar: ListVar . VRG Ident

    PV   shift, and go to state 30
    VRG  shift, and go to state 31


State 16

   15 ListVar: Ident .

    $default  reduce using rule 15 (ListVar)


State 17

   25 EnTeteFonct: VOID IDENT . LPAR Parametres RPAR

    LPAR  shift, and go to state 32


State 18

   20 EnTeteMain: MAIN . LPAR RPAR

    LPAR  shift, and go to state 33


State 19

    2 Prog: @1 DeclConst DeclVarPuisFonct DeclMain .

    $default  reduce using rule 2 (Prog)


State 20

   19 DeclMain: EnTeteMain . Corps

    LACC  shift, and go to state 23

    Corps  go to state 34


State 21

   24 EnTeteFonct: TYPE . IDENT LPAR Parametres RPAR

    IDENT  shift, and go to state 35


State 22

   21 DeclFonct: DeclFonct DeclUneFonct .

    $default  reduce using rule 21 (DeclFonct)


State 23

   30 Corps: LACC . DeclConst DeclVar SuiteInstr RACC

    $default  reduce using rule 4 (DeclConst)

    DeclConst  go to state 36


State 24

   23 DeclUneFonct: EnTeteFonct Corps .

    $default  reduce using rule 23 (DeclUneFonct)


State 25

    6 ListConst: IDENT EGAL . Litteral

    NUM        shift, and go to state 37
    CARACTERE  shift, and go to state 38
    ADDSUB     shift, and go to state 39

    Litteral     go to state 40
    NombreSigne  go to state 41


State 26

    3 DeclConst: DeclConst CONST ListConst PV .

    $default  reduce using rule 3 (DeclConst)


State 27

    5 ListConst: ListConst VRG . IDENT EGAL Litteral

    IDENT  shift, and go to state 42


State 28

   24 EnTeteFonct: TYPE IDENT LPAR . Parametres RPAR

    TYPE  shift, and go to state 43
    VOID  shift, and go to state 44

    Parametres  go to state 45
    ListTypVar  go to state 46


State 29

   16 Ident: IDENT Tab .
   17 Tab: Tab . LSQB ENTIER RSQB

    LSQB  shift, and go to state 47

    $default  reduce using rule 16 (Ident)


State 30

   11 DeclVarPuisFonct: TYPE ListVar PV . DeclVarPuisFonct

    TYPE  shift, and go to state 6
    VOID  shift, and go to state 7

    $default  reduce using rule 13 (DeclVarPuisFonct)

    DeclVarPuisFonct  go to state 48
    DeclFonct         go to state 9
    DeclUneFonct      go to state 10
    EnTeteFonct       go to state 11


State 31

   14 ListVar: ListVar VRG . Ident

    IDENT  shift, and go to state 49

    Ident  go to state 50


State 32

   25 EnTeteFonct: VOID IDENT LPAR . Parametres RPAR

    TYPE  shift, and go to state 43
    VOID  shift, and go to state 44

    Parametres  go to state 51
    ListTypVar  go to state 46


State 33

   20 EnTeteMain: MAIN LPAR . RPAR

    RPAR  shift, and go to state 52


State 34

   19 DeclMain: EnTeteMain Corps .

    $default  reduce using rule 19 (DeclMain)


State 35

   24 EnTeteFonct: TYPE IDENT . LPAR Parametres RPAR

    LPAR  shift, and go to state 28


State 36

    3 DeclConst: DeclConst . CONST ListConst PV
   30 Corps: LACC DeclConst . DeclVar SuiteInstr RACC

    CONST  shift, and go to state 5

    $default  reduce using rule 32 (DeclVar)

    DeclVar  go to state 53


State 37

    9 NombreSigne: NUM .

    $default  reduce using rule 9 (NombreSigne)


State 38

    8 Litteral: CARACTERE .

    $default  reduce using rule 8 (Litteral)


State 39

   10 NombreSigne: ADDSUB . NUM

    NUM  shift, and go to state 54


State 40

    6 ListConst: IDENT EGAL Litteral .

    $default  reduce using rule 6 (ListConst)


State 41

    7 Litteral: NombreSigne .

    $default  reduce using rule 7 (Litteral)


State 42

    5 ListConst: ListConst VRG IDENT . EGAL Litteral

    EGAL  shift, and go to state 55


State 43

   29 ListTypVar: TYPE . IDENT

    IDENT  shift, and go to state 56


State 44

   26 Parametres: VOID .

    $default  reduce using rule 26 (Parametres)


State 45

   24 EnTeteFonct: TYPE IDENT LPAR Parametres . RPAR

    RPAR  shift, and go to state 57


State 46

   27 Parametres: ListTypVar .
   28 ListTypVar: ListTypVar . VRG TYPE IDENT

    VRG  shift, and go to state 58

    $default  reduce using rule 27 (Parametres)


State 47

   17 Tab: Tab LSQB . ENTIER RSQB

    NUM  shift, and go to state 59

    $default  reduce using rule 71 (ENTIER)

    ENTIER  go to state 60


State 48

   11 DeclVarPuisFonct: TYPE ListVar PV DeclVarPuisFonct .

    $default  reduce using rule 11 (DeclVarPuisFonct)


State 49

   16 Ident: IDENT . Tab

    $default  reduce using rule 18 (Tab)

    Tab  go to state 29


State 50

   14 ListVar: ListVar VRG Ident .

    $default  reduce using rule 14 (ListVar)


State 51

   25 EnTeteFonct: VOID IDENT LPAR Parametres . RPAR

    RPAR  shift, and go to state 61


State 52

   20 EnTeteMain: MAIN LPAR RPAR .

    $default  reduce using rule 20 (EnTeteMain)


State 53

   30 Corps: LACC DeclConst DeclVar . SuiteInstr RACC
   31 DeclVar: DeclVar . TYPE ListVar PV

    TYPE  shift, and go to state 62

    $default  reduce using rule 34 (SuiteInstr)

    SuiteInstr  go to state 63


State 54

   10 NombreSigne: ADDSUB NUM .

    $default  reduce using rule 10 (NombreSigne)


State 55

    5 ListConst: ListConst VRG IDENT EGAL . Litteral

    NUM        shift, and go to state 37
    CARACTERE  shift, and go to state 38
    ADDSUB     shift, and go to state 39

    Litteral     go to state 64
    NombreSigne  go to state 41


State 56

   29 ListTypVar: TYPE IDENT .

    $default  reduce using rule 29 (ListTypVar)


State 57

   24 EnTeteFonct: TYPE IDENT LPAR Parametres RPAR .

    $default  reduce using rule 24 (EnTeteFonct)


State 58

   28 ListTypVar: ListTypVar VRG . TYPE IDENT

    TYPE  shift, and go to state 65


State 59

   70 ENTIER: NUM .

    $default  reduce using rule 70 (ENTIER)


State 60

   17 Tab: Tab LSQB ENTIER . RSQB

    RSQB  shift, and go to state 66


State 61

   25 EnTeteFonct: VOID IDENT LPAR Parametres RPAR .

    $default  reduce using rule 25 (EnTeteFonct)


State 62

   31 DeclVar: DeclVar TYPE . ListVar PV

    IDENT  shift, and go to state 49

    ListVar  go to state 67
    Ident    go to state 16


State 63

   30 Corps: LACC DeclConst DeclVar SuiteInstr . RACC
   33 SuiteInstr: SuiteInstr . Instr

    IF      shift, and go to state 68
    PRINT   shift, and go to state 69
    READ    shift, and go to state 70
    READCH  shift, and go to state 71
    WHILE   shift, and go to state 72
    IDENT   shift, and go to state 73
    LACC    shift, and go to state 74
    RACC    shift, and go to state 75
    PV      shift, and go to state 76
    RETURN  shift, and go to state 77

    InstrComp  go to state 78
    Instr      go to state 79
    LValue     go to state 80


State 64

    5 ListConst: ListConst VRG IDENT EGAL Litteral .

    $default  reduce using rule 5 (ListConst)


State 65

   28 ListTypVar: ListTypVar VRG TYPE . IDENT

    IDENT  shift, and go to state 81


State 66

   17 Tab: Tab LSQB ENTIER RSQB .

    $default  reduce using rule 17 (Tab)


State 67

   14 ListVar: ListVar . VRG Ident
   31 DeclVar: DeclVar TYPE ListVar . PV

    PV   shift, and go to state 82
    VRG  shift, and go to state 31


State 68

   37 Instr: IF . LPAR Exp RPAR JumpIf Instr
   39      | IF . LPAR Exp RPAR JumpIf Instr ELSE JumpElse $@2 Instr

    LPAR  shift, and go to state 83


State 69

   47 Instr: PRINT . LPAR Exp RPAR PV

    LPAR  shift, and go to state 84


State 70

   45 Instr: READ . LPAR IDENT RPAR PV

    LPAR  shift, and go to state 85


State 71

   46 Instr: READCH . LPAR IDENT RPAR PV

    LPAR  shift, and go to state 86


State 72

   41 Instr: WHILE . @3 LPAR Exp RPAR JumpIf Instr

    $default  reduce using rule 40 (@3)

    @3  go to state 87


State 73

   44 Instr: IDENT . LPAR Arguments RPAR PV
   52 LValue: IDENT . TabExp

    LPAR  shift, and go to state 88

    $default  reduce using rule 54 (TabExp)

    TabExp  go to state 89


State 74

   35 InstrComp: LACC . SuiteInstr RACC

    $default  reduce using rule 34 (SuiteInstr)

    SuiteInstr  go to state 90


State 75

   30 Corps: LACC DeclConst DeclVar SuiteInstr RACC .

    $default  reduce using rule 30 (Corps)


State 76

   48 Instr: PV .

    $default  reduce using rule 48 (Instr)


State 77

   42 Instr: RETURN . Exp PV
   43      | RETURN . PV

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    PV         shift, and go to state 95
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 99


State 78

   49 Instr: InstrComp .

    $default  reduce using rule 49 (Instr)


State 79

   33 SuiteInstr: SuiteInstr Instr .

    $default  reduce using rule 33 (SuiteInstr)


State 80

   36 Instr: LValue . EGAL Exp PV

    EGAL  shift, and go to state 100


State 81

   28 ListTypVar: ListTypVar VRG TYPE IDENT .

    $default  reduce using rule 28 (ListTypVar)


State 82

   31 DeclVar: DeclVar TYPE ListVar PV .

    $default  reduce using rule 31 (DeclVar)


State 83

   37 Instr: IF LPAR . Exp RPAR JumpIf Instr
   39      | IF LPAR . Exp RPAR JumpIf Instr ELSE JumpElse $@2 Instr

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 101


State 84

   47 Instr: PRINT LPAR . Exp RPAR PV

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 102


State 85

   45 Instr: READ LPAR . IDENT RPAR PV

    IDENT  shift, and go to state 103


State 86

   46 Instr: READCH LPAR . IDENT RPAR PV

    IDENT  shift, and go to state 104


State 87

   41 Instr: WHILE @3 . LPAR Exp RPAR JumpIf Instr

    LPAR  shift, and go to state 105


State 88

   44 Instr: IDENT LPAR . Arguments RPAR PV

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    $default  reduce using rule 51 (Arguments)

    Arguments  go to state 106
    LValue     go to state 98
    ListExp    go to state 107
    Exp        go to state 108


State 89

   52 LValue: IDENT TabExp .
   53 TabExp: TabExp . LSQB Exp RSQB

    LSQB  shift, and go to state 109

    $default  reduce using rule 52 (LValue)


State 90

   33 SuiteInstr: SuiteInstr . Instr
   35 InstrComp: LACC SuiteInstr . RACC

    IF      shift, and go to state 68
    PRINT   shift, and go to state 69
    READ    shift, and go to state 70
    READCH  shift, and go to state 71
    WHILE   shift, and go to state 72
    IDENT   shift, and go to state 73
    LACC    shift, and go to state 74
    RACC    shift, and go to state 110
    PV      shift, and go to state 76
    RETURN  shift, and go to state 77

    InstrComp  go to state 78
    Instr      go to state 79
    LValue     go to state 80


State 91

   52 LValue: IDENT . TabExp
   67 Exp: IDENT . LPAR Arguments RPAR

    LPAR  shift, and go to state 111

    $default  reduce using rule 54 (TabExp)

    TabExp  go to state 89


State 92

   63 Exp: LPAR . Exp RPAR

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 112


State 93

   65 Exp: NUM .

    $default  reduce using rule 65 (Exp)


State 94

   66 Exp: CARACTERE .

    $default  reduce using rule 66 (Exp)


State 95

   43 Instr: RETURN PV .

    $default  reduce using rule 43 (Instr)


State 96

   60 Exp: ADDSUB . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 113


State 97

   62 Exp: NEGATION . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 114


State 98

   64 Exp: LValue .

    $default  reduce using rule 64 (Exp)


State 99

   42 Instr: RETURN Exp . PV
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    PV       shift, and go to state 117
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 100

   36 Instr: LValue EGAL . Exp PV

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 120


State 101

   37 Instr: IF LPAR Exp . RPAR JumpIf Instr
   39      | IF LPAR Exp . RPAR JumpIf Instr ELSE JumpElse $@2 Instr
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    RPAR     shift, and go to state 121
    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 102

   47 Instr: PRINT LPAR Exp . RPAR PV
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    RPAR     shift, and go to state 122
    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 103

   45 Instr: READ LPAR IDENT . RPAR PV

    RPAR  shift, and go to state 123


State 104

   46 Instr: READCH LPAR IDENT . RPAR PV

    RPAR  shift, and go to state 124


State 105

   41 Instr: WHILE @3 LPAR . Exp RPAR JumpIf Instr

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 125


State 106

   44 Instr: IDENT LPAR Arguments . RPAR PV

    RPAR  shift, and go to state 126


State 107

   50 Arguments: ListExp .
   55 ListExp: ListExp . VRG Exp

    VRG  shift, and go to state 127

    $default  reduce using rule 50 (Arguments)


State 108

   56 ListExp: Exp .
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119

    $default  reduce using rule 56 (ListExp)


State 109

   53 TabExp: TabExp LSQB . Exp RSQB

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 128


State 110

   35 InstrComp: LACC SuiteInstr RACC .

    $default  reduce using rule 35 (InstrComp)


State 111

   67 Exp: IDENT LPAR . Arguments RPAR

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    $default  reduce using rule 51 (Arguments)

    Arguments  go to state 129
    LValue     go to state 98
    ListExp    go to state 107
    Exp        go to state 108


State 112

   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp
   63    | LPAR Exp . RPAR

    RPAR     shift, and go to state 130
    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 113

   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   60    | ADDSUB Exp .
   61    | Exp . BOPE Exp

    DIVSTAR  shift, and go to state 119

    $default  reduce using rule 60 (Exp)


State 114

   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp
   62    | NEGATION Exp .

    $default  reduce using rule 62 (Exp)


State 115

   59 Exp: Exp COMP . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 131


State 116

   61 Exp: Exp BOPE . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 132


State 117

   42 Instr: RETURN Exp PV .

    $default  reduce using rule 42 (Instr)


State 118

   57 Exp: Exp ADDSUB . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 133


State 119

   58 Exp: Exp DIVSTAR . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 134


State 120

   36 Instr: LValue EGAL Exp . PV
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    PV       shift, and go to state 135
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 121

   37 Instr: IF LPAR Exp RPAR . JumpIf Instr
   39      | IF LPAR Exp RPAR . JumpIf Instr ELSE JumpElse $@2 Instr

    $default  reduce using rule 68 (JumpIf)

    JumpIf  go to state 136


State 122

   47 Instr: PRINT LPAR Exp RPAR . PV

    PV  shift, and go to state 137


State 123

   45 Instr: READ LPAR IDENT RPAR . PV

    PV  shift, and go to state 138


State 124

   46 Instr: READCH LPAR IDENT RPAR . PV

    PV  shift, and go to state 139


State 125

   41 Instr: WHILE @3 LPAR Exp . RPAR JumpIf Instr
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    RPAR     shift, and go to state 140
    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 126

   44 Instr: IDENT LPAR Arguments RPAR . PV

    PV  shift, and go to state 141


State 127

   55 ListExp: ListExp VRG . Exp

    IDENT      shift, and go to state 91
    LPAR       shift, and go to state 92
    NUM        shift, and go to state 93
    CARACTERE  shift, and go to state 94
    ADDSUB     shift, and go to state 96
    NEGATION   shift, and go to state 97

    LValue  go to state 98
    Exp     go to state 142


State 128

   53 TabExp: TabExp LSQB Exp . RSQB
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    RSQB     shift, and go to state 143
    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119


State 129

   67 Exp: IDENT LPAR Arguments . RPAR

    RPAR  shift, and go to state 144


State 130

   63 Exp: LPAR Exp RPAR .

    $default  reduce using rule 63 (Exp)


State 131

   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   59    | Exp COMP Exp .
   61    | Exp . BOPE Exp

    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119

    $default  reduce using rule 59 (Exp)


State 132

   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp
   61    | Exp BOPE Exp .

    COMP     shift, and go to state 115
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119

    $default  reduce using rule 61 (Exp)


State 133

   57 Exp: Exp . ADDSUB Exp
   57    | Exp ADDSUB Exp .
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    DIVSTAR  shift, and go to state 119

    $default  reduce using rule 57 (Exp)


State 134

   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   58    | Exp DIVSTAR Exp .
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    $default  reduce using rule 58 (Exp)


State 135

   36 Instr: LValue EGAL Exp PV .

    $default  reduce using rule 36 (Instr)


State 136

   37 Instr: IF LPAR Exp RPAR JumpIf . Instr
   39      | IF LPAR Exp RPAR JumpIf . Instr ELSE JumpElse $@2 Instr

    IF      shift, and go to state 68
    PRINT   shift, and go to state 69
    READ    shift, and go to state 70
    READCH  shift, and go to state 71
    WHILE   shift, and go to state 72
    IDENT   shift, and go to state 73
    LACC    shift, and go to state 74
    PV      shift, and go to state 76
    RETURN  shift, and go to state 77

    InstrComp  go to state 78
    Instr      go to state 145
    LValue     go to state 80


State 137

   47 Instr: PRINT LPAR Exp RPAR PV .

    $default  reduce using rule 47 (Instr)


State 138

   45 Instr: READ LPAR IDENT RPAR PV .

    $default  reduce using rule 45 (Instr)


State 139

   46 Instr: READCH LPAR IDENT RPAR PV .

    $default  reduce using rule 46 (Instr)


State 140

   41 Instr: WHILE @3 LPAR Exp RPAR . JumpIf Instr

    $default  reduce using rule 68 (JumpIf)

    JumpIf  go to state 146


State 141

   44 Instr: IDENT LPAR Arguments RPAR PV .

    $default  reduce using rule 44 (Instr)


State 142

   55 ListExp: ListExp VRG Exp .
   57 Exp: Exp . ADDSUB Exp
   58    | Exp . DIVSTAR Exp
   59    | Exp . COMP Exp
   61    | Exp . BOPE Exp

    COMP     shift, and go to state 115
    BOPE     shift, and go to state 116
    ADDSUB   shift, and go to state 118
    DIVSTAR  shift, and go to state 119

    $default  reduce using rule 55 (ListExp)


State 143

   53 TabExp: TabExp LSQB Exp RSQB .

    $default  reduce using rule 53 (TabExp)


State 144

   67 Exp: IDENT LPAR Arguments RPAR .

    $default  reduce using rule 67 (Exp)


State 145

   37 Instr: IF LPAR Exp RPAR JumpIf Instr .
   39      | IF LPAR Exp RPAR JumpIf Instr . ELSE JumpElse $@2 Instr

    ELSE  shift, and go to state 147

    $default  reduce using rule 37 (Instr)


State 146

   41 Instr: WHILE @3 LPAR Exp RPAR JumpIf . Instr

    IF      shift, and go to state 68
    PRINT   shift, and go to state 69
    READ    shift, and go to state 70
    READCH  shift, and go to state 71
    WHILE   shift, and go to state 72
    IDENT   shift, and go to state 73
    LACC    shift, and go to state 74
    PV      shift, and go to state 76
    RETURN  shift, and go to state 77

    InstrComp  go to state 78
    Instr      go to state 148
    LValue     go to state 80


State 147

   39 Instr: IF LPAR Exp RPAR JumpIf Instr ELSE . JumpElse $@2 Instr

    $default  reduce using rule 69 (JumpElse)

    JumpElse  go to state 149


State 148

   41 Instr: WHILE @3 LPAR Exp RPAR JumpIf Instr .

    $default  reduce using rule 41 (Instr)


State 149

   39 Instr: IF LPAR Exp RPAR JumpIf Instr ELSE JumpElse . $@2 Instr

    $default  reduce using rule 38 ($@2)

    $@2  go to state 150


State 150

   39 Instr: IF LPAR Exp RPAR JumpIf Instr ELSE JumpElse $@2 . Instr

    IF      shift, and go to state 68
    PRINT   shift, and go to state 69
    READ    shift, and go to state 70
    READCH  shift, and go to state 71
    WHILE   shift, and go to state 72
    IDENT   shift, and go to state 73
    LACC    shift, and go to state 74
    PV      shift, and go to state 76
    RETURN  shift, and go to state 77

    InstrComp  go to state 78
    Instr      go to state 151
    LValue     go to state 80


State 151

   39 Instr: IF LPAR Exp RPAR JumpIf Instr ELSE JumpElse $@2 Instr .

    $default  reduce using rule 39 (Instr)
